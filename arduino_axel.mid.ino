int melody[] = {
  NOTE_F4, NOTE_GS4, NOTE_F4, NOTE_F4, NOTE_AS4, NOTE_F4, NOTE_DS4, NOTE_F4,
  NOTE_C5, NOTE_F4, NOTE_F4, NOTE_CS5, NOTE_C5, NOTE_GS4, NOTE_F4, NOTE_C5,
  NOTE_F5, NOTE_F4, NOTE_DS4, NOTE_DS4, NOTE_C4, NOTE_G4, NOTE_F4, NOTE_F4,
  NOTE_GS4, NOTE_F4, NOTE_F4, NOTE_AS4, NOTE_F4, NOTE_DS4, NOTE_F4, NOTE_C5,
  NOTE_F4, NOTE_F4, NOTE_CS5, NOTE_C5, NOTE_GS4, NOTE_F4, NOTE_C5, NOTE_F5,
  NOTE_F4, NOTE_DS4, NOTE_DS4, NOTE_C4, NOTE_G4, NOTE_F4, NOTE_F1, NOTE_F2,
  NOTE_DS1, NOTE_DS2, NOTE_C1, NOTE_C2, NOTE_DS1, NOTE_F1, NOTE_F2, NOTE_C1,
  NOTE_C2, NOTE_DS2, NOTE_F2, NOTE_CS2, NOTE_CS1, NOTE_CS3, NOTE_DS1, NOTE_DS2,
  NOTE_CS1, NOTE_DS1, NOTE_F1, NOTE_F2, NOTE_DS2, NOTE_C2, NOTE_AS1, NOTE_GS1,
  NOTE_F1, NOTE_F2, NOTE_DS1, NOTE_DS2, NOTE_D1, NOTE_C2, NOTE_DS1, NOTE_F1,
  NOTE_F2, NOTE_D1, NOTE_C2, NOTE_DS2, NOTE_F2, NOTE_CS2, NOTE_CS1, NOTE_CS3,
  NOTE_DS1, NOTE_DS2, NOTE_CS1, NOTE_DS1, NOTE_F1, NOTE_F2, NOTE_F1, NOTE_F2,
  NOTE_DS1, NOTE_DS2, NOTE_C1, NOTE_C2, NOTE_DS1, NOTE_F1, NOTE_F2, NOTE_C1,
  NOTE_C2, NOTE_DS2, NOTE_F2, NOTE_CS2, NOTE_CS1, NOTE_CS3, NOTE_DS1, NOTE_DS2,
  NOTE_CS1, NOTE_DS1, NOTE_F1, NOTE_F2, NOTE_DS2, NOTE_C2, NOTE_AS1, NOTE_GS1,
  NOTE_F4, NOTE_F1, NOTE_GS4, NOTE_F2, NOTE_F4, NOTE_DS1, NOTE_F4, NOTE_DS2,
  NOTE_AS4, NOTE_D1, NOTE_F4, NOTE_C2, NOTE_DS4, NOTE_DS1, NOTE_F1, NOTE_F4,
  NOTE_C5, NOTE_F2, NOTE_F4, NOTE_F4, NOTE_D1, NOTE_CS5, NOTE_C2, NOTE_C5,
  NOTE_DS2, NOTE_GS4, NOTE_F2, NOTE_F4, NOTE_CS2, NOTE_CS1, NOTE_C5, NOTE_F5,
  NOTE_CS3, NOTE_F4, NOTE_DS4, NOTE_DS1, NOTE_DS4, NOTE_DS2, NOTE_C4, NOTE_CS1,
  NOTE_G4, NOTE_DS1, NOTE_F1, NOTE_F2, NOTE_F4,
};

// note durations: 4 = quarter note, 8 = eighth note, etc.:
int noteDurations[] = {
  16, 16, 16, 16, 16, 16, 16, 8,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 0, 16,
  16, 16, 16, 16, 16, 16, 8, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 0, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 8,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 0,
};
